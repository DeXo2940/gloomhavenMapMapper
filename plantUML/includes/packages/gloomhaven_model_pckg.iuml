!include ../common/procedures.iuml

package peewee <<Node>> {
    class Model <<peewee>> 
    class Database <<peewee>>

    hide <<peewee>> stereotype
    hide <<peewee>> members
}

package gloomhaven_model_pckg{
    class BaseModel <<gloomhaven_model_pckg>> extends peewee.Model{   
    }

    class "Meta" as meta_base_model <<gloomhaven_model_pckg>>{
        database: peewee.Database
    }
    $nested(BaseModel, meta_base_model)
    peewee.Database <-- meta_base_model
    ' meta_base_model --> peewee.Database

    class Scenario <<gloomhaven_model_pckg>> extends BaseModel{
        $primary_key("id: int")
        $index("name: str")
        coordinates: str
    }
    
    class Achievement <<gloomhaven_model_pckg>> extends BaseModel{
        $index("id: int")
        $primary_key("name: str")
        type: str
    }

    class Restriction <<gloomhaven_model_pckg>> extends BaseModel{
        $foreign_key("scenario_id: Scenario.id")
        $foreign_key("achievement_id: Achievement.id")
        is_done: bool
        level: int
    }
    class "Meta" as meta_restriction <<gloomhaven_model_pckg>>{
        primary_key: peewee.CompositeKey
    }
    $nested(Restriction, meta_restriction)

    ' Exceptions
    together {
        exception GloomhavenModelException <<gloomhaven_model_pckg>>{
            +message : str
        }
        $throws(BaseModel, GloomhavenModelException)

        hide <<gloomhaven_model_pckg>> stereotype
    }

    Restriction .. Scenario
    Restriction .. Achievement
    
    hide <<gloomhaven_model_pckg>> stereotype
}